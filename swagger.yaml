swagger: '2.0'
info:
  title: LeadCRM RestService
  description: >-
    An ASP.NET Core Web API for managing ToDo items This API version has been
    deprecated. Please use one of the new APIs available from the explorer.
  termsOfService: 'https://blogs.nhquydev.net/terms?v=1.0'
  contact:
    name: Example Contact
    url: 'https://blogs.nhquydev.net/contact?v=1.0'
  license:
    name: Example License
    url: 'https://blogs.nhquydev.net/license?v=1.0'
  version: '1.0'
paths:
  /Develop/v1/Index:
    get:
      tags:
        - Develop
      produces:
        - application/json
      parameters:
        - in: query
          name: discontinuedOnly
          type: boolean
          default: false
      responses:
        '200':
          description: Success
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  '/Develop/v1/GetById/{id}':
    get:
      tags:
        - Develop
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
      responses:
        '200':
          description: Success
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  '/Develop/v1/get-by-id/{id}':
    get:
      tags:
        - Develop
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Success
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /Develop/v1/MongoStatus:
    get:
      tags:
        - Develop
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /Develop:
    get:
      tags:
        - Develop
      operationId: BaseAPI
      produces:
        - application/json
      parameters:
        - in: header
          name: x-api-version
          type: string
        - in: query
          name: api-version
          type: string
      responses:
        '200':
          description: Success
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /Oauth/v1/Authorize:
    get:
      tags:
        - Oauth
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /Oauth/v1/Login:
    post:
      tags:
        - Oauth
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/LoginRequestModel'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/LoginResponseModel'
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
  /v1/Profile:
    get:
      tags:
        - User
      operationId: User
      produces:
        - application/json
      responses:
        '200':
          description: Success
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ProblemDetails'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
definitions:
  LoginRequestModel:
    required:
      - email
      - password
    type: object
    properties:
      email:
        format: email
        minLength: 1
        type: string
      password:
        minLength: 1
        type: string
  LoginResponseModel:
    type: object
    properties:
      statusCode:
        $ref: '#/definitions/NqdevStatusCode'
      errorMessage:
        type: string
      expiration:
        format: date-time
        type: string
      token:
        type: string
  NqdevStatusCode:
    enum:
      - processing
      - ok
      - unauthorized
      - notFound
      - internalServerError
    type: string
  ProblemDetails:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        format: int32
        type: integer
      detail:
        type: string
      instance:
        type: string
    additionalProperties: {}